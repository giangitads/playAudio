{"version":3,"sources":["audios/chonhaumotkyniem.mp3","audios/emchicannoico.mp3","audios/noitachoem.mp3","audios/tinhsauthienthu.mp3","audios/voivang.mp3","audios/index.js","components/AudioItem/index.js","components/FormUploadAudio/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","audios","src","chonhaumotkyniem","image","title","artist","emchicannoico","noitachoem","tinhsauthienthu","voivang","AudioItem","props","audio","index","audioIndex","className","onClick","selectAudio","alt","FormUploadAudio","closeFormUpload","showAlert2","Swal","fire","submitFile","setTimeout","isOpenFormUpload","this","id","type","name","accept","TextField","label","Button","variant","Component","App","audioRef","useRef","useState","setAudioIndex","currentTime","setCurrentTime","duration","setDuration","isPlay","setPlay","isOpenSideBar","setOpenSideBar","setOpenFormUpload","lengthAudios","length","nextAudio","current","pause","play","cTimeMinute","Math","floor","cTimeSecond","dTimeMinute","dTimeSecond","cTime","dTime","renderTime","axis","xmax","x","onChange","styles","track","backgroundColor","height","active","thumb","marginTop","width","borderRadius","ref","onLoadedData","onTimeUpdate","onEnded","map","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67d6cd87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chonhaumotkyniem.e2b64486.mp3\";","module.exports = __webpack_public_path__ + \"static/media/emchicannoico.936b3be0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/noitachoem.306ed0e1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tinhsauthienthu.cae878e3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/voivang.36178780.mp3\";","import chonhaumotkyniem from \"./chonhaumotkyniem.mp3\";\r\nimport emchicannoico from \"./emchicannoico.mp3\";\r\nimport noitachoem from \"./noitachoem.mp3\";\r\nimport tinhsauthienthu from \"./tinhsauthienthu.mp3\";\r\nimport voivang from \"./voivang.mp3\";\r\n\r\nconst audios = [\r\n  {\r\n    src: chonhaumotkyniem,\r\n    image: \"https://pnpl.onecmscdn.com/2019/05/10/51437938_2080124948730848_3415068646127435776_n.jpg\",\r\n    title: \"Anh Tin Mình Đã Cho Nhau Một Kỉ Niệm (Acoustic Cover)\",\r\n    artist: \"PnP Band\",\r\n  },\r\n  {\r\n    src: emchicannoico,\r\n    image: \"https://zmp3-photo-fbcrawler.zadn.vn/avatars/7/d/a/1/7da16b5d9fc940762565b4a8cfec75ed.jpg\",\r\n    title: \"EM CHỈ CẦN NÓI CÓ\",\r\n    artist: \"Doãn Hiếu\",\r\n  },\r\n  {\r\n    src: noitachoem,\r\n    image: \"https://i.ytimg.com/vi/cdkSV-mBg0s/maxresdefault.jpg\",\r\n    title: \"NƠI TA CHỜ EM\",\r\n    artist: \" WILL FT KAITY\",\r\n  },\r\n  {\r\n    src: tinhsauthienthu,\r\n    image: \"https://image.thanhnien.vn/768/uploaded/hienth/2020_04_14/zc-20200414-2_dpdq.png\",\r\n    title: \"Tình Sầu Thiên Thu Muôn Nối\",\r\n    artist: \"Doãn Hiếu\",\r\n  },\r\n  {\r\n    src: voivang,\r\n    image: \"https://i.ytimg.com/vi/t0pEEbhEUk8/maxresdefault.jpg\",\r\n    title: \"Vội Vàng\",\r\n    artist: \"Tạ Quang Thắng\",\r\n  },\r\n  \r\n];\r\n\r\nexport default audios;\r\n","import React from 'react'\r\nimport \"./style.css\";\r\n\r\nconst AudioItem = (props) => {\r\n    const { audio, index, audioIndex} = props;\r\n    const selectAudio = () => {\r\n        props.selectAudio(index);\r\n    }\r\n     \r\n    return (\r\n        <div>\r\n            <div className={`audio-item ${audioIndex === index ? \"playing\" : \"\" }`} onClick={selectAudio} >\r\n                <img src={audio.image} alt=\"audio item\" />\r\n                <p>{audio.title + \" - \" + audio.artist}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AudioItem;","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default class FormUploadAudio extends Component {\r\n    closeFormUpload = () => {\r\n        this.props.closeFormUpload();\r\n    };\r\n\r\n    showAlert2 = () => {\r\n        Swal.fire('Hiện tại chưa có tình năng Upload!', 'Hãy chờ đợi thêm!', 'error');\r\n    };\r\n\r\n    submitFile = () => {\r\n        this.closeFormUpload();\r\n        setTimeout(() => {\r\n            this.showAlert2();\r\n        }, 500);\r\n    };\r\n    render() {\r\n        const { isOpenFormUpload } = this.props;\r\n        return (\r\n            <div\r\n                className={`form-upload-audio ${\r\n                    isOpenFormUpload ? 'open' : ''\r\n                }`}\r\n            >\r\n                <div className=\"icon-close-form\">\r\n                    <HighlightOffIcon onClick={this.closeFormUpload} />\r\n                </div>\r\n                <p>Upload Audio</p>\r\n                <div className=\"input-file\">\r\n                    <input\r\n                        id=\"fileAudio\"\r\n                        type=\"file\"\r\n                        name=\"fileAudio\"\r\n                        accept=\".mp3\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField label=\"Name Audio\" name=\"nameAudio\" />\r\n                </div>\r\n                <div>\r\n                    <TextField label=\"Artist Audio\" name=\"artistAudio\" />\r\n                </div>\r\n                <Button onClick={this.submitFile} variant=\"contained\">\r\n                    Upload\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport React, { useRef, useState } from 'react';\nimport TimeSlider from 'react-input-slider';\nimport './App.css';\nimport audios from './audios';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AudioItem from './components/AudioItem';\nimport { Button } from '@material-ui/core';\nimport FormUploadAudio from './components/FormUploadAudio';\n\nconst App = () => {\n    const audioRef = useRef();\n    const [audioIndex, setAudioIndex] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [isPlay, setPlay] = useState(false);\n    const [isOpenSideBar, setOpenSideBar] = useState(true);\n    const [isOpenFormUpload, setOpenFormUpload] = useState(false);\n\n    const handleLoadedData = () => {\n        setDuration(audioRef.current.duration);\n        if (isPlay) audioRef.current.play();\n    };\n\n    const handlePausePlayClick = () => {\n        if (isPlay) {\n            audioRef.current.pause();\n        } else {\n            audioRef.current.play();\n        }\n        setPlay(!isPlay);\n    };\n\n    const handleTimeSliderChange = ({ x }) => {\n        audioRef.current.currentTime = x;\n        setCurrentTime(x);\n\n        if (!isPlay) {\n            setPlay(true);\n            audioRef.current.play();\n        }\n    };\n    const lengthAudios = audios.length;\n    const renderAudioItem = () => {\n        let xhtml = null;\n        xhtml = audios.map((audio, index) => {\n            return (\n                <AudioItem\n                    key={index}\n                    index={index}\n                    audio={audio}\n                    selectAudio={() => {\n                        selectAudio(index);\n                    }}\n                    audioIndex={audioIndex}\n                />\n            );\n        });\n        return xhtml;\n    };\n    const selectAudio = (index) => {\n        setAudioIndex(index);\n    };\n\n    const closeFormUpload = () => {\n        setOpenFormUpload(false);\n    };\n\n    const previousAudio = () => {\n        if (audioIndex === 0) setAudioIndex(lengthAudios - 1);\n        else setAudioIndex(audioIndex - 1);\n    };\n\n    const nextAudio = () => {\n        if (audioIndex === lengthAudios - 1) setAudioIndex(0);\n        else setAudioIndex(audioIndex + 1);\n    };\n\n    const renderTime = () => {\n        let xhtml = null;\n        let cTimeMinute = Math.floor(currentTime / 60);\n        let cTimeSecond = Math.floor(currentTime % 60);\n        let dTimeMinute = Math.floor(duration / 60);\n        let dTimeSecond = Math.floor(duration % 60);\n        let cTime = `${cTimeMinute} : ${\n            cTimeSecond < 10\n                ? `0${cTimeSecond}`\n                : `${cTimeSecond}`\n        }`;\n        let dTime = `${dTimeMinute} : ${\n            dTimeSecond < 10\n                ? `0${dTimeSecond}`\n                : `${dTimeSecond}`\n        }`;\n        xhtml = `${cTime} / ${dTime}`;\n        return xhtml;\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"audio\">\n                <div className=\"background\"></div>\n                {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\n                <img\n                    className={`Song-Thumbnail ${\n                        isPlay ? 'playAudio' : 'pauseAudio'\n                    }`}\n                    src={audios[audioIndex].image}\n                    alt=\"image\"\n                />\n                <h2 className=\"Song-Title\">{audios[audioIndex].title}</h2>\n                <p className=\"Singer\">{audios[audioIndex].artist}</p>\n                <div className=\"Control-Button-Group\">\n                    <div\n                        className=\"Prev-Button\"\n                        onClick={() => {\n                            previousAudio();\n                        }}\n                    >\n                        <SkipPreviousIcon />\n                    </div>\n                    <div\n                        className=\"Pause-Play-Button\"\n                        onClick={handlePausePlayClick}\n                    >\n                        {isPlay ? (\n                            <PauseCircleOutlineIcon />\n                        ) : (\n                            <PlayCircleOutlineIcon />\n                        )}\n                    </div>\n                    <div\n                        className=\"Next-Button\"\n                        onClick={() => {\n                            nextAudio();\n                        }}\n                    >\n                        <SkipNextIcon />\n                    </div>\n                </div>\n                <p className=\"render-time\" >{renderTime()}</p>\n                <TimeSlider\n                    axis=\"x\"\n                    xmax={duration}\n                    x={currentTime}\n                    onChange={handleTimeSliderChange}\n                    styles={{\n                        track: {\n                            backgroundColor: '#e3e3e3',\n                            height: '2px',\n                        },\n                        active: {\n                            backgroundColor: '#333',\n                            height: '2px',\n                        },\n                        thumb: {\n                            marginTop: '-3px',\n                            width: '8px',\n                            height: '8px',\n                            backgroundColor: '#333',\n                            borderRadius: 0,\n                        },\n                    }}\n                />\n                <audio\n                    ref={audioRef}\n                    src={audios[audioIndex].src}\n                    onLoadedData={handleLoadedData}\n                    onTimeUpdate={() =>\n                        setCurrentTime(audioRef.current.currentTime)\n                    }\n                    onEnded={() => {\n                        nextAudio();\n                    }}\n                />\n            </div>\n            {!isOpenSideBar ? (\n                <label className=\"open-sidebar\">\n                    <MenuOpenIcon\n                        onClick={() => {\n                            setOpenSideBar(true);\n                        }}\n                    />\n                </label>\n            ) : (\n                ''\n            )}\n            <div className={`slide-bar ${isOpenSideBar ? 'open' : 'close'} `}>\n                <label className=\"close-sidebar\">\n                    <HighlightOffIcon\n                        onClick={() => {\n                            setOpenSideBar(false);\n                        }}\n                    />\n                </label>\n                <h1>List Audios</h1>\n                {renderAudioItem()}\n                <div className=\"button-add-audio\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => {\n                            setOpenFormUpload(true);\n                        }}\n                    >\n                        Upload Audio\n                    </Button>\n                </div>\n            </div>\n            <FormUploadAudio\n                isOpenFormUpload={isOpenFormUpload}\n                closeFormUpload={closeFormUpload}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}